{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const OptimizerContext=/*#__PURE__*/createContext(undefined);export const OptimizerProvider=_ref=>{let{children}=_ref;const[formData,setFormData]=useState({soilType:'',cropType:''});const[currentStep,setCurrentStep]=useState(0);const[showResults,setShowResults]=useState(false);const[recommendations,setRecommendations]=useState([]);const[yieldData,setYieldData]=useState(null);return/*#__PURE__*/_jsx(OptimizerContext.Provider,{value:{formData,setFormData,currentStep,setCurrentStep,showResults,setShowResults,recommendations,setRecommendations,yieldData,setYieldData},children:children});};export const useOptimizer=()=>{const context=useContext(OptimizerContext);if(context===undefined){throw new Error('useOptimizer must be used within an OptimizerProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","OptimizerContext","undefined","OptimizerProvider","_ref","children","formData","setFormData","soilType","cropType","currentStep","setCurrentStep","showResults","setShowResults","recommendations","setRecommendations","yieldData","setYieldData","Provider","value","useOptimizer","context","Error"],"sources":["/home/sofiane/Desktop/Crop Nutrition Optimizer/frontend/src/contexts/OptimizerContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { FormData, Recommendation, YieldData } from '../types';\n\ninterface OptimizerContextType {\n  formData: FormData;\n  setFormData: React.Dispatch<React.SetStateAction<FormData>>;\n  currentStep: number;\n  setCurrentStep: React.Dispatch<React.SetStateAction<number>>;\n  showResults: boolean;\n  setShowResults: React.Dispatch<React.SetStateAction<boolean>>;\n  recommendations: Recommendation[];\n  setRecommendations: React.Dispatch<React.SetStateAction<Recommendation[]>>;\n  yieldData: YieldData | null;\n  setYieldData: React.Dispatch<React.SetStateAction<YieldData | null>>;\n}\n\nconst OptimizerContext = createContext<OptimizerContextType | undefined>(undefined);\n\nexport const OptimizerProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const [formData, setFormData] = useState<FormData>({\n    soilType: '',\n    cropType: ''\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [recommendations, setRecommendations] = useState<Recommendation[]>([]);\n  const [yieldData, setYieldData] = useState<YieldData | null>(null);\n\n  return (\n    <OptimizerContext.Provider\n      value={{\n        formData,\n        setFormData,\n        currentStep,\n        setCurrentStep,\n        showResults,\n        setShowResults,\n        recommendations,\n        setRecommendations,\n        yieldData,\n        setYieldData,\n      }}\n    >\n      {children}\n    </OptimizerContext.Provider>\n  );\n};\n\nexport const useOptimizer = () => {\n  const context = useContext(OptimizerContext);\n  if (context === undefined) {\n    throw new Error('useOptimizer must be used within an OptimizerProvider');\n  }\n  return context;\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAgBnE,KAAM,CAAAC,gBAAgB,cAAGL,aAAa,CAAmCM,SAAS,CAAC,CAEnF,MAAO,MAAM,CAAAC,iBAAoD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/E,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAW,CACjDU,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EACZ,CAAC,CAAC,CACF,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACgB,eAAe,CAAEC,kBAAkB,CAAC,CAAGjB,QAAQ,CAAmB,EAAE,CAAC,CAC5E,KAAM,CAACkB,SAAS,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAAmB,IAAI,CAAC,CAElE,mBACEE,IAAA,CAACC,gBAAgB,CAACiB,QAAQ,EACxBC,KAAK,CAAE,CACLb,QAAQ,CACRC,WAAW,CACXG,WAAW,CACXC,cAAc,CACdC,WAAW,CACXC,cAAc,CACdC,eAAe,CACfC,kBAAkB,CAClBC,SAAS,CACTC,YACF,CAAE,CAAAZ,QAAA,CAEDA,QAAQ,CACgB,CAAC,CAEhC,CAAC,CAED,MAAO,MAAM,CAAAe,YAAY,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAC,OAAO,CAAGxB,UAAU,CAACI,gBAAgB,CAAC,CAC5C,GAAIoB,OAAO,GAAKnB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAoB,KAAK,CAAC,uDAAuD,CAAC,CAC1E,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}