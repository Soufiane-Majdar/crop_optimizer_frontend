{"ast":null,"code":"import _objectSpread from\"/home/sofiane/Desktop/Crop Nutrition Optimizer/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from'react';import{AnimatePresence}from'framer-motion';import{HeroSection}from'./HeroSection';import{SoilTypeSelector}from'./SoilTypeSelector';import{CropTypeSelector}from'./CropTypeSelector';import{Results}from'./Results';import{LoadingSpinner}from'./LoadingSpinner';import{useOptimizer}from'../contexts/OptimizerContext';import{getSoilTypes,getCropTypes,getRecommendations,getYieldData}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const CropNutritionOptimizer=()=>{const{formData,setFormData,currentStep,setCurrentStep,showResults,setShowResults,recommendations,setRecommendations,yieldData,setYieldData}=useOptimizer();const[soilTypes,setSoilTypes]=React.useState([]);const[cropTypes,setCropTypes]=React.useState([]);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{const fetchData=async()=>{try{const[soilTypesResponse,cropTypesResponse]=await Promise.all([getSoilTypes(),getCropTypes()]);setSoilTypes(soilTypesResponse.data);setCropTypes(cropTypesResponse.data);}catch(error){console.error('Error fetching data:',error);}finally{setIsLoading(false);}};fetchData();},[]);if(isLoading){return/*#__PURE__*/_jsx(LoadingSpinner,{});}const handleNext=async()=>{if(currentStep<2){setCurrentStep(currentStep+1);}else{try{const[recommendationsResponse,yieldDataResponse]=await Promise.all([getRecommendations({soilType:formData.soilType,cropType:formData.cropType}),getYieldData({soilType:formData.soilType,cropType:formData.cropType})]);setRecommendations(recommendationsResponse.data);setYieldData(yieldDataResponse.data);setShowResults(true);}catch(error){console.error('Error fetching results:',error);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-white flex flex-col\",children:[/*#__PURE__*/_jsxs(\"main\",{className:\"flex-grow\",children:[!showResults&&currentStep===0&&/*#__PURE__*/_jsx(HeroSection,{onNext:handleNext}),!showResults&&currentStep>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2 bg-gray-200 rounded-full\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-full bg-green-600 rounded-full transition-all duration-500\",style:{width:\"\".concat(currentStep/3*100,\"%\")}})})}),/*#__PURE__*/_jsxs(AnimatePresence,{mode:\"wait\",children:[currentStep===1&&/*#__PURE__*/_jsx(SoilTypeSelector,{soilTypes:soilTypes,selectedSoilType:formData.soilType,onSelect:soilType=>setFormData(_objectSpread(_objectSpread({},formData),{},{soilType}))}),currentStep===2&&/*#__PURE__*/_jsx(CropTypeSelector,{cropTypes:cropTypes,selectedCropType:formData.cropType,onSelect:cropType=>setFormData(_objectSpread(_objectSpread({},formData),{},{cropType}))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-8 flex justify-end\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleNext,className:\"bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-full\",children:\"Continue\"})})]}),showResults&&/*#__PURE__*/_jsx(Results,{recommendations:recommendations,yieldData:yieldData,soilType:formData.soilType,cropType:formData.cropType,cropTypes:cropTypes,soilTypes:soilTypes})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"bg-gray-50 py-8 mt-auto\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container mx-auto px-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-x-4\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"/contact\",className:\"text-gray-600 hover:text-green-600 transition-colors\",children:\"Contact\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/privacy\",className:\"text-gray-600 hover:text-green-600 transition-colors\",children:\"Privacy Policy\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/terms\",className:\"text-gray-600 hover:text-green-600 transition-colors\",children:\"Terms of Service\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-500 text-sm\",children:[\"\\xA9 \",new Date().getFullYear(),\" Crop Nutrition Optimizer. All rights reserved.\"]})]})})})]});};","map":{"version":3,"names":["React","useEffect","useState","AnimatePresence","HeroSection","SoilTypeSelector","CropTypeSelector","Results","LoadingSpinner","useOptimizer","getSoilTypes","getCropTypes","getRecommendations","getYieldData","jsx","_jsx","jsxs","_jsxs","CropNutritionOptimizer","formData","setFormData","currentStep","setCurrentStep","showResults","setShowResults","recommendations","setRecommendations","yieldData","setYieldData","soilTypes","setSoilTypes","cropTypes","setCropTypes","isLoading","setIsLoading","fetchData","soilTypesResponse","cropTypesResponse","Promise","all","data","error","console","handleNext","recommendationsResponse","yieldDataResponse","soilType","cropType","className","children","onNext","style","width","concat","mode","selectedSoilType","onSelect","_objectSpread","selectedCropType","onClick","href","Date","getFullYear"],"sources":["/home/sofiane/Desktop/Crop Nutrition Optimizer/frontend/src/components/CropNutritionOptimizer.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { AnimatePresence } from 'framer-motion';\nimport { HeroSection } from './HeroSection';\nimport { SoilTypeSelector } from './SoilTypeSelector';\nimport { CropTypeSelector } from './CropTypeSelector';\nimport { Results } from './Results';\nimport { LoadingSpinner } from './LoadingSpinner';\nimport { useOptimizer } from '../contexts/OptimizerContext';\nimport { getSoilTypes, getCropTypes, getRecommendations, getYieldData } from '../services/api';\n\nexport const CropNutritionOptimizer: React.FC = () => {\n  const {\n    formData,\n    setFormData,\n    currentStep,\n    setCurrentStep,\n    showResults,\n    setShowResults,\n    recommendations,\n    setRecommendations,\n    yieldData,\n    setYieldData,\n  } = useOptimizer();\n\n  const [soilTypes, setSoilTypes] = React.useState([]);\n  const [cropTypes, setCropTypes] = React.useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [soilTypesResponse, cropTypesResponse] = await Promise.all([\n          getSoilTypes(),\n          getCropTypes(),\n        ]);\n        setSoilTypes(soilTypesResponse.data);\n        setCropTypes(cropTypesResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingSpinner />;\n  }\n\n  const handleNext = async () => {\n    if (currentStep < 2) {\n      setCurrentStep(currentStep + 1);\n    } else {\n      try {\n        const [recommendationsResponse, yieldDataResponse] = await Promise.all([\n          getRecommendations({\n            soilType: formData.soilType,\n            cropType: formData.cropType\n          }),\n          getYieldData({\n            soilType: formData.soilType,\n            cropType: formData.cropType\n          })\n        ]);\n        setRecommendations(recommendationsResponse.data);\n        setYieldData(yieldDataResponse.data);\n        setShowResults(true);\n      } catch (error) {\n        console.error('Error fetching results:', error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white flex flex-col\">\n      <main className=\"flex-grow\">\n        {!showResults && currentStep === 0 && <HeroSection onNext={handleNext} />}\n\n        {!showResults && currentStep > 0 && (\n          <div className=\"container mx-auto px-4 py-8\">\n            {/* Progress Bar */}\n            <div className=\"mb-8\">\n              <div className=\"h-2 bg-gray-200 rounded-full\">\n                <div\n                  className=\"h-full bg-green-600 rounded-full transition-all duration-500\"\n                  style={{ width: `${(currentStep / 3) * 100}%` }}\n                />\n              </div>\n            </div>\n\n            {/* Form Steps */}\n            <AnimatePresence mode=\"wait\">\n              {currentStep === 1 && (\n                <SoilTypeSelector\n                  soilTypes={soilTypes}\n                  selectedSoilType={formData.soilType}\n                  onSelect={(soilType) => setFormData({ ...formData, soilType })}\n                />\n              )}\n\n              {currentStep === 2 && (\n                <CropTypeSelector\n                  cropTypes={cropTypes}\n                  selectedCropType={formData.cropType}\n                  onSelect={(cropType) => setFormData({ ...formData, cropType })}\n                />\n              )}\n            </AnimatePresence>\n\n            <div className=\"mt-8 flex justify-end\">\n              <button\n                onClick={handleNext}\n                className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-full\"\n              >\n                Continue\n              </button>\n            </div>\n          </div>\n        )}\n\n        {showResults && (\n          <Results \n            recommendations={recommendations} \n            yieldData={yieldData}\n            soilType={formData.soilType}\n            cropType={formData.cropType}\n            cropTypes={cropTypes}\n            soilTypes={soilTypes}\n          />\n        )}\n      </main>\n\n      {/* Footer */}\n      <footer className=\"bg-gray-50 py-8 mt-auto\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex flex-wrap justify-between items-center\">\n            <div className=\"space-x-4\">\n              <a href=\"/contact\" className=\"text-gray-600 hover:text-green-600 transition-colors\">Contact</a>\n              <a href=\"/privacy\" className=\"text-gray-600 hover:text-green-600 transition-colors\">Privacy Policy</a>\n              <a href=\"/terms\" className=\"text-gray-600 hover:text-green-600 transition-colors\">Terms of Service</a>\n            </div>\n            <div className=\"text-gray-500 text-sm\">\n              © {new Date().getFullYear()} Crop Nutrition Optimizer. All rights reserved.\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}