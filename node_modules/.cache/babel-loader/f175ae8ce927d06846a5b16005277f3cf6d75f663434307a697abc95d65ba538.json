{"ast":null,"code":"var _jsxFileName = \"/home/sofiane/Desktop/Crop Nutrition Optimizer/frontend/src/components/PDFGenerator.tsx\";\nimport React from 'react';\nimport { Page, Text, View, Document, StyleSheet, PDFDownloadLink } from '@react-pdf/renderer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#FFFFFF',\n    padding: 30\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    color: '#166534' // green-800\n  },\n  subtitle: {\n    fontSize: 18,\n    marginBottom: 10,\n    marginTop: 20,\n    color: '#166534'\n  },\n  recommendation: {\n    marginBottom: 15,\n    padding: 10,\n    backgroundColor: '#f0fdf4',\n    // green-50\n    borderRadius: 5\n  },\n  productName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  description: {\n    fontSize: 12,\n    marginBottom: 5\n  },\n  dosage: {\n    fontSize: 12,\n    color: '#16a34a' // green-600\n  },\n  yieldData: {\n    marginTop: 10,\n    padding: 10,\n    backgroundColor: '#f0fdf4',\n    borderRadius: 5\n  },\n  yieldText: {\n    fontSize: 12,\n    marginBottom: 5\n  },\n  footer: {\n    position: 'absolute',\n    bottom: 30,\n    left: 30,\n    right: 30,\n    textAlign: 'center',\n    color: '#666666',\n    fontSize: 10\n  }\n});\nconst PDFDocument = ({\n  recommendations,\n  yieldData,\n  soilType,\n  cropType\n}) => /*#__PURE__*/_jsxDEV(Document, {\n  children: /*#__PURE__*/_jsxDEV(Page, {\n    size: \"A4\",\n    style: styles.page,\n    children: [/*#__PURE__*/_jsxDEV(View, {\n      style: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Crop Nutrition Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.subtitle,\n        children: \"Soil and Crop Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.description,\n        children: [\"Soil Type: \", soilType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.description,\n        children: [\"Crop Type: \", cropType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.subtitle,\n        children: \"Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(View, {\n        style: styles.recommendation,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.productName,\n          children: rec.product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.description,\n          children: rec.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.dosage,\n          children: [\"Recommended Dosage: \", rec.dosage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)), yieldData && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.subtitle,\n          children: \"Yield Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          style: styles.yieldData,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.yieldText,\n            children: [\"Current Yield: \", yieldData.current, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.yieldText,\n            children: [\"Potential Yield: \", yieldData.potential, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.yieldText,\n            children: [\"Potential Improvement: \", yieldData.potential - yieldData.current, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.footer,\n      children: [\"Generated by Crop Nutrition Optimizer - \", new Date().toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 3\n}, this);\n_c = PDFDocument;\nexport const PDFDownloadButton = props => /*#__PURE__*/_jsxDEV(PDFDownloadLink, {\n  document: /*#__PURE__*/_jsxDEV(PDFDocument, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 15\n  }, this),\n  fileName: `crop-recommendations-${props.soilType}-${props.cropType}.pdf`,\n  children: ({\n    loading\n  }) => loading ? 'Generating PDF...' : 'Download PDF'\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 123,\n  columnNumber: 3\n}, this);\n_c2 = PDFDownloadButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"PDFDocument\");\n$RefreshReg$(_c2, \"PDFDownloadButton\");","map":{"version":3,"names":["React","Page","Text","View","Document","StyleSheet","PDFDownloadLink","jsxDEV","_jsxDEV","Fragment","_Fragment","styles","create","page","flexDirection","backgroundColor","padding","section","margin","flexGrow","title","fontSize","marginBottom","color","subtitle","marginTop","recommendation","borderRadius","productName","fontWeight","description","dosage","yieldData","yieldText","footer","position","bottom","left","right","textAlign","PDFDocument","recommendations","soilType","cropType","children","size","style","fileName","_jsxFileName","lineNumber","columnNumber","map","rec","index","product","current","potential","Date","toLocaleDateString","_c","PDFDownloadButton","props","document","loading","_c2","$RefreshReg$"],"sources":["/home/sofiane/Desktop/Crop Nutrition Optimizer/frontend/src/components/PDFGenerator.tsx"],"sourcesContent":["import React from 'react';\nimport { Page, Text, View, Document, StyleSheet, PDFDownloadLink } from '@react-pdf/renderer';\nimport { Recommendation, YieldData } from '../types';\n\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#FFFFFF',\n    padding: 30,\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    color: '#166534', // green-800\n  },\n  subtitle: {\n    fontSize: 18,\n    marginBottom: 10,\n    marginTop: 20,\n    color: '#166534',\n  },\n  recommendation: {\n    marginBottom: 15,\n    padding: 10,\n    backgroundColor: '#f0fdf4', // green-50\n    borderRadius: 5,\n  },\n  productName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  description: {\n    fontSize: 12,\n    marginBottom: 5,\n  },\n  dosage: {\n    fontSize: 12,\n    color: '#16a34a', // green-600\n  },\n  yieldData: {\n    marginTop: 10,\n    padding: 10,\n    backgroundColor: '#f0fdf4',\n    borderRadius: 5,\n  },\n  yieldText: {\n    fontSize: 12,\n    marginBottom: 5,\n  },\n  footer: {\n    position: 'absolute',\n    bottom: 30,\n    left: 30,\n    right: 30,\n    textAlign: 'center',\n    color: '#666666',\n    fontSize: 10,\n  },\n});\n\ninterface PDFDocumentProps {\n  recommendations: Recommendation[];\n  yieldData: YieldData | null;\n  soilType: string;\n  cropType: string;\n}\n\nconst PDFDocument: React.FC<PDFDocumentProps> = ({\n  recommendations,\n  yieldData,\n  soilType,\n  cropType,\n}) => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      <View style={styles.section}>\n        <Text style={styles.title}>Crop Nutrition Recommendations</Text>\n        \n        <Text style={styles.subtitle}>Soil and Crop Information</Text>\n        <Text style={styles.description}>Soil Type: {soilType}</Text>\n        <Text style={styles.description}>Crop Type: {cropType}</Text>\n\n        <Text style={styles.subtitle}>Recommendations</Text>\n        {recommendations.map((rec, index) => (\n          <View key={index} style={styles.recommendation}>\n            <Text style={styles.productName}>{rec.product}</Text>\n            <Text style={styles.description}>{rec.description}</Text>\n            <Text style={styles.dosage}>Recommended Dosage: {rec.dosage}</Text>\n          </View>\n        ))}\n\n        {yieldData && (\n          <>\n            <Text style={styles.subtitle}>Yield Analysis</Text>\n            <View style={styles.yieldData}>\n              <Text style={styles.yieldText}>\n                Current Yield: {yieldData.current}%\n              </Text>\n              <Text style={styles.yieldText}>\n                Potential Yield: {yieldData.potential}%\n              </Text>\n              <Text style={styles.yieldText}>\n                Potential Improvement: {yieldData.potential - yieldData.current}%\n              </Text>\n            </View>\n          </>\n        )}\n      </View>\n      <Text style={styles.footer}>\n        Generated by Crop Nutrition Optimizer - {new Date().toLocaleDateString()}\n      </Text>\n    </Page>\n  </Document>\n);\n\nexport const PDFDownloadButton: React.FC<PDFDocumentProps> = (props) => (\n  <PDFDownloadLink\n    document={<PDFDocument {...props} />}\n    fileName={`crop-recommendations-${props.soilType}-${props.cropType}.pdf`}\n  >\n    {({ loading }) => loading ? 'Generating PDF...' : 'Download PDF'}\n  </PDFDownloadLink>\n); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}