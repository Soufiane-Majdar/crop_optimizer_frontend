{"ast":null,"code":"var _jsxFileName = \"/home/sofiane/Desktop/Crop Nutrition Optimizer/frontend/src/contexts/OptimizerContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptimizerContext = /*#__PURE__*/createContext(undefined);\nexport const OptimizerProvider = ({\n  children\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    soilType: '',\n    cropType: ''\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [recommendations, setRecommendations] = useState([]);\n  const [yieldData, setYieldData] = useState(null);\n  return /*#__PURE__*/_jsxDEV(OptimizerContext.Provider, {\n    value: {\n      formData,\n      setFormData,\n      currentStep,\n      setCurrentStep,\n      showResults,\n      setShowResults,\n      recommendations,\n      setRecommendations,\n      yieldData,\n      setYieldData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(OptimizerProvider, \"MvnDCw2+FzuJ0qHlc12zxYhwLAU=\");\n_c = OptimizerProvider;\nexport const useOptimizer = () => {\n  _s2();\n  const context = useContext(OptimizerContext);\n  if (context === undefined) {\n    throw new Error('useOptimizer must be used within an OptimizerProvider');\n  }\n  return context;\n};\n_s2(useOptimizer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"OptimizerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","OptimizerContext","undefined","OptimizerProvider","children","_s","formData","setFormData","soilType","cropType","currentStep","setCurrentStep","showResults","setShowResults","recommendations","setRecommendations","yieldData","setYieldData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useOptimizer","_s2","context","Error","$RefreshReg$"],"sources":["/home/sofiane/Desktop/Crop Nutrition Optimizer/frontend/src/contexts/OptimizerContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { FormData, Recommendation, YieldData } from '../types';\n\ninterface OptimizerContextType {\n  formData: FormData;\n  setFormData: React.Dispatch<React.SetStateAction<FormData>>;\n  currentStep: number;\n  setCurrentStep: React.Dispatch<React.SetStateAction<number>>;\n  showResults: boolean;\n  setShowResults: React.Dispatch<React.SetStateAction<boolean>>;\n  recommendations: Recommendation[];\n  setRecommendations: React.Dispatch<React.SetStateAction<Recommendation[]>>;\n  yieldData: YieldData | null;\n  setYieldData: React.Dispatch<React.SetStateAction<YieldData | null>>;\n}\n\nconst OptimizerContext = createContext<OptimizerContextType | undefined>(undefined);\n\nexport const OptimizerProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const [formData, setFormData] = useState<FormData>({\n    soilType: '',\n    cropType: ''\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [recommendations, setRecommendations] = useState<Recommendation[]>([]);\n  const [yieldData, setYieldData] = useState<YieldData | null>(null);\n\n  return (\n    <OptimizerContext.Provider\n      value={{\n        formData,\n        setFormData,\n        currentStep,\n        setCurrentStep,\n        showResults,\n        setShowResults,\n        recommendations,\n        setRecommendations,\n        yieldData,\n        setYieldData,\n      }}\n    >\n      {children}\n    </OptimizerContext.Provider>\n  );\n};\n\nexport const useOptimizer = () => {\n  const context = useContext(OptimizerContext);\n  if (context === undefined) {\n    throw new Error('useOptimizer must be used within an OptimizerProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBnE,MAAMC,gBAAgB,gBAAGL,aAAa,CAAmCM,SAAS,CAAC;AAEnF,OAAO,MAAMC,iBAAoD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAW;IACjDU,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAmB,EAAE,CAAC;EAC5E,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAmB,IAAI,CAAC;EAElE,oBACEE,OAAA,CAACC,gBAAgB,CAACiB,QAAQ;IACxBC,KAAK,EAAE;MACLb,QAAQ;MACRC,WAAW;MACXG,WAAW;MACXC,cAAc;MACdC,WAAW;MACXC,cAAc;MACdC,eAAe;MACfC,kBAAkB;MAClBC,SAAS;MACTC;IACF,CAAE;IAAAb,QAAA,EAEDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAAClB,EAAA,CA5BWF,iBAAoD;AAAAqB,EAAA,GAApDrB,iBAAoD;AA8BjE,OAAO,MAAMsB,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChC,MAAMC,OAAO,GAAG9B,UAAU,CAACI,gBAAgB,CAAC;EAC5C,IAAI0B,OAAO,KAAKzB,SAAS,EAAE;IACzB,MAAM,IAAI0B,KAAK,CAAC,uDAAuD,CAAC;EAC1E;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,YAAY;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}